{"version":3,"sources":["assets/headshot.png","assets/name.mp3","components/name/name.component.jsx","components/footer/footer.component.jsx","helpers/darkmode.helpers.js","pages/home/home.component.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Name","className","role","onClick","Audio","audio","play","aria-label","Footer","props","darkMode","year","Date","getFullYear","href","rel","target","style","color","border","backgroundColor","getPrefColorScheme","window","matchMedia","matches","Home","setDarkMode","useState","isReturningUser","localStorage","savedMode","JSON","parse","getItem","userPrefersDark","getInitialMode","count","setCount","useEffect","setItem","stringify","prevMode","transitionName","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","src","image","alt","avgTypingDelay","onTypingDone","setTimeout","Backspace","delay","App","Boolean","location","hostname","match","routing","Helmet","name","content","path","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,sSCkB5BC,MAfF,IAMT,6BAAK,aACO,2BAAG,sBACb,0BAAMC,UAAU,QAAQC,KAAK,MAAMC,QAPzB,KACZ,IAAIC,MAAMC,KAAOC,QAMoCC,aAAW,aAAY,iB,YC4CjEC,MAlDCC,IACd,MAAM,SAAEC,GAAaD,EACfE,GAAO,IAAIC,MAAOC,cACxB,OACE,yBAAKZ,UAAY,UACf,wBAAIA,UAAU,gBACZ,4BACE,6BACE,uBAAGa,KAAK,yBAAyBC,IAAI,sBAAsBC,OAAO,UAAS,uBAAGf,UAAU,8BAA8BgB,MAAQ,CAACC,MAAOR,EAAW,OAAS,OAAQS,OAAST,EAAW,iBAAkB,mBAAmB,yBAAKT,UAAY,cAAcgB,MAAQ,CAAEG,gBAAiBV,EAAW,OAAS,OAAQQ,MAAOR,EAAW,OAAS,SAAS,aASzV,4BACE,6BACE,uBAAGI,KAAK,kCAAkCC,IAAI,sBAAsBC,OAAO,UAAS,uBAAGf,UAAU,6BAA6BgB,MAAQ,CAACC,MAAOR,EAAW,OAAS,OAAQS,OAAST,EAAW,iBAAkB,mBAAmB,yBAAKT,UAAY,cAAcgB,MAAQ,CAAEG,gBAAiBV,EAAW,OAAS,OAAQQ,MAAOR,EAAW,OAAS,SAAS,eAQjW,4BACE,6BACE,uBAAGI,KAAK,qCAAqCC,IAAI,sBAAsBC,OAAO,UAAS,uBAAGf,UAAU,8BAA8BgB,MAAQ,CAACC,MAAOR,EAAW,OAAS,OAAQS,OAAST,EAAW,iBAAkB,mBAAmB,yBAAKT,UAAY,cAAcgB,MAAQ,CAAEG,gBAAiBV,EAAW,OAAS,OAAQQ,MAAOR,EAAW,OAAS,SAAS,gBAGrW,4BACE,6BACE,uBAAGI,KAAK,gCAAgCC,IAAI,sBAAsBC,OAAO,UAAS,uBAAGf,UAAU,4BAA4BgB,MAAQ,CAACC,MAAOR,EAAW,OAAS,OAAQS,OAAST,EAAW,iBAAkB,mBAAmB,yBAAKT,UAAY,cAAcgB,MAAQ,CAAEG,gBAAiBV,EAAW,OAAS,OAAQQ,MAAOR,EAAW,OAAS,SAAS,eAShW,gCACI,2BAAG,6BAAwBC,MCjD9B,MAgBMU,EAAqB,KAChC,GAAIC,OAAOC,WACX,OAAOD,OAAOC,WAAW,gCAAgCC,S,MCmE5CC,MAxEF,KACT,MAAOf,EAAUgB,GAAeC,mBDdN,MAC5B,MAAMC,EAAkB,SAAUC,aAC5BC,EAAYC,KAAKC,MAAMH,aAAaI,QAAQ,SAC5CC,EAAkBb,IAExB,OAAGO,EACME,IAEEI,GCMgCC,KAClCC,EAAOC,GAAYV,mBAAS,GAUnC,OARAW,oBAAU,KACRD,EAAS,IACR,CAACD,IAEJE,oBAAU,KACRT,aAAaU,QAAQ,OAAQR,KAAKS,UAAU9B,KAC3C,CAACA,IAGF,yBAAKT,UAAS,oBAAeS,EAAW,YAAc,eACpD,4BAAQT,UAAU,eAClB,yBAAKA,UAAY,gBACf,0BAAMA,UAAY,UAChB,0BAAME,QAAS,IAAMuB,EAAYe,IAAaA,IAAY/B,EAAW,eAAO,iBAE9E,yBAAKT,UAAY,UACjB,kBAAC,IAAD,CAAyByC,eAAe,UAAUC,kBAAkB,EAAMC,wBAAyB,IAAKC,uBAAwB,IAAKC,uBAAwB,KAC3J,yBAAKC,IAAKC,IAAO/C,UAAU,WAAWgD,IAAI,UAE1C,yBAAKhD,UAAY,QACf,6BAAK,uBACH,6BACE,kBAAC,EAAD,QAGJ,yBAAKA,UAAY,SAAQ,aACxBmC,EACD,kBAAC,IAAD,CAAQc,eAAgB,GAAIC,aAAc,IAAOC,WAAWf,EAAS,GAAI,OACvE,2BACE,8BAAM,4BAAyB,0BAAMnC,KAAK,MAAMK,aAAW,QAAO,kBAClE,kBAAC,IAAO8C,UAAR,CAAkBjB,MAAO,GAAIkB,MAAO,OACpC,8BAAM,+BAA4B,0BAAMpD,KAAK,MAAMK,aAAW,SAAQ,kBACtE,kBAAC,IAAO8C,UAAR,CAAkBjB,MAAO,GAAIkB,MAAO,OACpC,8BAAM,iBAAc,0BAAMpD,KAAK,MAAMK,aAAW,UAAS,sCAGzD,MAEN,yBAAKN,UAAY,YAAW,uBAAGA,UAAU,yBAAwB,WACvD,0BAAMC,KAAK,MAAMK,aAAW,UAAS,8BAAa,eACjD,0BAAML,KAAK,MAAMK,aAAW,OAAM,iCAG7C,yBAAKN,UAAU,SAAQ,+JAIrB,6BACA,6BAAK,yGACmG,0BAAMC,KAAK,MAAMK,aAAW,SAAQ,oBAE9I,yBAAKN,UAAU,WAAU,uBAEvB,0BAAMC,KAAK,MAAMK,aAAW,QAAO,mBAEnC,0BAAML,KAAK,MAAMK,aAAW,aAAY,oBACxC,0BAAML,KAAK,MAAMK,aAAW,cAAa,mBACzC,0BAAML,KAAK,MAAMK,aAAW,aAAY,mBACxC,0BAAML,KAAK,MAAMK,aAAW,UAAS,oBAI3C,kBAAC,EAAD,CAAQG,SAAUA,OCjEX6C,MATH,IAGR,6BACE,kBAAC,EAAD,O,MCGcC,QACW,cAA7BlC,OAAOmC,SAASC,UAEe,UAA7BpC,OAAOmC,SAASC,UAEhBpC,OAAOmC,SAASC,SAASC,MACvB,2DCTN,MAAMC,EACJ,oCACE,kBAACC,EAAA,EAAD,KACE,+BAAO,6CACP,0BAAMC,KAAK,cAAcC,QAAQ,8IAEnC,kBAAC,IAAD,KACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAW,KAAQ3C,OAAOmC,SAAW,8BAAsC,QAChG,kBAAC,IAAD,CAAOO,KAAK,WAAWC,UAAW,KAAQ3C,OAAOmC,SAAW,uCAA+C,QAC3G,kBAAC,IAAD,CAAOO,KAAK,KACV,kBAAC,EAAD,UAMZE,IAASC,OAAOP,EAASQ,SAASC,eAAe,SDyG3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,KAAKC,IACJA,EAAaC,eAEdC,MAAMC,IACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.e766ab3a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headshot.c5e84b08.png\";","module.exports = __webpack_public_path__ + \"static/media/name.db092841.mp3\";","import React from 'react';\nimport audio from '../../assets/name.mp3';\n\nconst Name = () => {\n  const start = () => {\n    new Audio(audio).play();\n  }\n\n  return (\n    <div>\n      My name is<b>&nbsp;Chen Liang&nbsp;</b>\n      <span className=\"audio\" role=\"img\" onClick={start} aria-label=\"Snowboard\">\n        🔊\n      </span>\n    </div>\n  );\n};\n\nexport default Name;              \n","\nimport React from 'react';\nimport 'font-awesome/css/font-awesome.css';\nimport './footer.styles.css';\n\nconst Footer = (props) => {\n  const { darkMode } = props;\n  const year = new Date().getFullYear();\n  return (\n    <div className = 'footer'>\n      <ul className=\"Social-Icons\">\n        <li>\n          <div>\n            <a href=\"mailto:hi@chenliang.ca\" rel=\"noopener noreferrer\" target=\"_blank\"><i className=\"fa fa-envelope icon tooltip\" style ={{color: darkMode ? '#fff' : '#333', border : darkMode ? '#fff 3px solid': '#333 3px solid'}}><div className = 'tooltiptext' style ={{ backgroundColor: darkMode ? '#fff' : '#333', color: darkMode ? '#333' : '#fff'}}>Email</div></i>\n            </a>\n          </div>\n        </li>\n        {/* <li>\n          <div>\n            <a href=\"http://instagram.com/mr_chenliang\" rel=\"noopener noreferrer\" target=\"_blank\"><i className=\"fa fa-instagram icon tooltip\" style ={{color: darkMode ? '#fff' : '#333', border : darkMode ? '#fff 3px solid': '#333 3px solid'}}><div className = 'tooltiptext' style ={{ backgroundColor: darkMode ? '#fff' : '#333', color: darkMode ? '#333' : '#fff'}}>Instagram</div></i></a>              \n          </div>\n        </li> */}\n        <li>\n          <div>\n            <a href=\"http://twitter.com/mr_chenliang\" rel=\"noopener noreferrer\" target=\"_blank\"><i className=\"fa fa-twitter icon tooltip\" style ={{color: darkMode ? '#fff' : '#333', border : darkMode ? '#fff 3px solid': '#333 3px solid'}}><div className = 'tooltiptext' style ={{ backgroundColor: darkMode ? '#fff' : '#333', color: darkMode ? '#333' : '#fff'}}>Twitter</div></i></a>              \n          </div>\n        </li>\n        {/* <li>\n          <div>\n            <a href=\"http://medium.com/@chen.liang\" rel=\"noopener noreferrer\" target=\"_blank\"><i className=\"fa fa-medium icon tooltip\" style ={{color: darkMode ? '#fff' : '#333', border : darkMode ? '#fff 3px solid': '#333 3px solid'}}><div className = 'tooltiptext' style ={{ backgroundColor: darkMode ? '#fff' : '#333', color: darkMode ? '#333' : '#fff'}}>Medium</div></i></a>              \n          </div>\n        </li> */}\n        <li>\n          <div>\n            <a href=\"http://linkedin.com/in/mrchenliang\" rel=\"noopener noreferrer\" target=\"_blank\"><i className=\"fa fa-linkedin icon tooltip\" style ={{color: darkMode ? '#fff' : '#333', border : darkMode ? '#fff 3px solid': '#333 3px solid'}}><div className = 'tooltiptext' style ={{ backgroundColor: darkMode ? '#fff' : '#333', color: darkMode ? '#333' : '#fff'}}>LinkedIn</div></i></a>              \n          </div>\n        </li>\n        <li>\n          <div>\n            <a href=\"http://github.com/mrchenliang\" rel=\"noopener noreferrer\" target=\"_blank\"><i className=\"fa fa-github icon tooltip\" style ={{color: darkMode ? '#fff' : '#333', border : darkMode ? '#fff 3px solid': '#333 3px solid'}}><div className = 'tooltiptext' style ={{ backgroundColor: darkMode ? '#fff' : '#333', color: darkMode ? '#333' : '#fff'}}>Github</div></i></a>              \n          </div>\n        </li>\n        {/* <li>\n          <div>\n            <a href=\"/resume.pdf\" rel=\"noopener noreferrer\" target=\"_blank\"><i className=\"fa fa-file icon tooltip\"><div className = 'tooltiptext'>Resume</div></i></a>              \n          </div>\n        </li> */}\n      </ul>\n      <footer>\n          <p>Copyright © Chen Liang {year}</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","export const getInitialMode = () => {\n  const isReturningUser = 'dark' in localStorage;\n  const savedMode = JSON.parse(localStorage.getItem('dark'));\n  const userPrefersDark = getPrefColorScheme();\n  // if mode was saved -> dark / light\n  if(isReturningUser) {\n    return savedMode;\n    // if preferred color scheme is dark -> dark\n  } else if (userPrefersDark) {\n    return true;\n    // otherwise -> light\n  } else {\n    return false;\n  }\n}\n\nexport const getPrefColorScheme = () => {\n  if(!window.matchMedia) return;\n  return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n}","\nimport React, { useEffect, useState } from 'react';\nimport Typist from 'react-typist';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group'\n\nimport image from '../../assets/headshot.png';\nimport Name from \"../../components/name/name.component\";\nimport Footer from \"../../components/footer/footer.component\";\nimport { getInitialMode } from '../../helpers/darkmode.helpers';\n\nimport 'font-awesome/css/font-awesome.css';\nimport './home.styles.css';\n\nconst Home = () => {\n    const [darkMode, setDarkMode] = useState(getInitialMode())  \n    const [count, setCount] = useState(1);\n\n    useEffect(() => {\n      setCount(1);\n    }, [count]);\n\n    useEffect(() => {\n      localStorage.setItem('dark', JSON.stringify(darkMode));\n    }, [darkMode]);\n\n    return (\n      <div className={`home-page ${darkMode ? 'dark-mode' : 'light-mode'}`}>\n        <header className=\"home-header\">\n        <div className = \"home-content\">\n          <span className = 'toggle'>\n            <span onClick={() => setDarkMode(prevMode => !prevMode)}>{darkMode ? '☀️' : '🌚'}</span>\n          </span>\n          <div className = 'header'>\n          <ReactCSSTransitionGroup transitionName=\"example\" transitionAppear={true} transitionAppearTimeout={700} transitionEnterTimeout={700} transitionLeaveTimeout={700}>\n            <img src={image} className=\"headshot\" alt=\"logo\" />\n          </ReactCSSTransitionGroup>\n            <div className = 'info'>\n              <div>Hello | 你好\n                <div>\n                  <Name />\n                </div>\n              </div>\n              <div className = 'title'>I am a&nbsp;\n              {count ? (\n              <Typist avgTypingDelay={50} onTypingDone={() =>  setTimeout(setCount(0), 3200)}>\n                <b>\n                  <span>Senior Software Engineer <span role=\"img\" aria-label=\"Gear\"> ⚙️</span></span>\n                  <Typist.Backspace count={28} delay={1200} />\n                  <span>Sessional Course Instructor <span role=\"img\" aria-label=\"Books\"> 📚</span></span>\n                  <Typist.Backspace count={31} delay={1800} />\n                  <span>Career Mentor <span role=\"img\" aria-label=\"Mentor\"> 👨‍🏫</span></span>\n                </b>\n              </Typist>\n              ) : null}\n          </div>\n            <div className = 'location'><i className=\"fa fa-map-marker pin\"/>\n              Toronto <span role=\"img\" aria-label=\"Canada\">  🇨🇦</span> / \n              New York <span role=\"img\" aria-label=\"USA\">  🇺🇸 </span>\n            </div>\n          </div>\n            <div className='about'>\n                I am energetic, adaptable, and endlessly curious about the world around us; I bring this passion to solving complex problems with simple, elegant solutions.\n              {/* <br/>\n                In my career, I have sought out diverse opportunities to apply my technical skills. */}\n              <br/>\n              <br/>\n                Amid the fast pace of our world, I am also in the pursuit of finding long-term sustainable happiness. <span role=\"img\" aria-label=\"Cloud\">  ☁️ </span>\n            </div>\n            <div className='hobbies'>\n              A few of my hobbies: \n              <span role=\"img\" aria-label=\"Tech\"> 💻 |</span>\n              {/* <span role=\"img\" aria-label=\"Beer\"> 🍺 | </span> */}\n              <span role=\"img\" aria-label=\"Snowboard\"> 🏂 | </span>\n              <span role=\"img\" aria-label=\"Basketball\"> 🏀 |</span> \n              <span role=\"img\" aria-label=\"Traveling\"> ✈️ |</span> \n              <span role=\"img\" aria-label=\"Coffee\"> ☕️</span>\n            </div>\n          </div>\n          </div>\n        <Footer darkMode={darkMode}/>\n        </header>\n      </div>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Home from \"./pages/home/home.component\";\n\nconst App = () => {\n \n  return (\n    <div>\n      <Home/>\n    </div>\n  );\n};\n\nexport default App;\n\n\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Helmet } from 'react-helmet';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nconst routing = (\n  <>\n    <Helmet>\n      <title>Chen Liang | Full Stack Software Engineer</title>\n      <meta name=\"description\" content=\"Chen is a software engineer. His passion is to work with talented individuals and solve complex problems with simple, elegant solutions.\" />\n    </Helmet>\n    <Router>\n        <Switch>\n          <Route path='/links' component={() => { window.location = 'https://linktr.ee/chenliang'; return null;} }/>\n          <Route path='/consult' component={() => { window.location = 'https://chenliang.as.me/schedule.php'; return null;} }/>\n          <Route path=\"/\">\n            <App/>\n          </Route>\n        </Switch>\n    </Router>\n  </>\n)\nReactDOM.render(routing, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}